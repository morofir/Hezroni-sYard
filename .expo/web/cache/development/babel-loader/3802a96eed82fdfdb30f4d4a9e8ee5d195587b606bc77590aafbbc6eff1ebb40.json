{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Input, Button } from 'react-native-elements';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar auth = getAuth();\nvar SignInScreen = function SignInScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    validationMessage = _useState6[0],\n    setValidationMessage = _useState6[1];\n  function login() {\n    return _login.apply(this, arguments);\n  }\n  function _login() {\n    _login = _asyncToGenerator(function* () {\n      if (email === '' || password === '') {\n        setValidationMessage('Required fields are missing');\n        return;\n      }\n      try {\n        yield signInWithEmailAndPassword(auth, email, password);\n      } catch (error) {\n        setValidationMessage(error.message);\n      }\n    });\n    return _login.apply(this, arguments);\n  }\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.content,\n      children: [_jsx(Image, {\n        source: require(\"../assets/logo.png\"),\n        style: styles.logo\n      }), _jsx(Input, {\n        placeholder: \"Email\",\n        containerStyle: styles.inputContainer,\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        leftIcon: _jsx(Icon, {\n          name: \"envelope\",\n          size: 16\n        })\n      }), _jsx(Input, {\n        placeholder: \"Password\",\n        containerStyle: styles.inputContainer,\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        secureTextEntry: true,\n        leftIcon: _jsx(Icon, {\n          name: \"key\",\n          size: 16\n        })\n      }), _jsx(Text, {\n        style: styles.error,\n        children: validationMessage\n      }), _jsx(Button, {\n        title: \"Sign In\",\n        buttonStyle: styles.button,\n        onPress: login\n      }), _jsxs(View, {\n        style: styles.signupContainer,\n        children: [_jsx(Text, {\n          style: styles.signupText,\n          children: \"Don't have an account yet?\"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('Sign Up');\n          },\n          children: _jsx(Text, {\n            style: styles.signupLink,\n            children: \"Sign up here\"\n          })\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  content: {\n    width: '80%',\n    alignItems: 'center'\n  },\n  logo: {\n    width: 150,\n    height: 150,\n    marginBottom: 20\n  },\n  inputContainer: {\n    marginTop: 10\n  },\n  button: {\n    marginTop: 20,\n    backgroundColor: '#2196F3',\n    borderRadius: 8,\n    paddingVertical: 14\n  },\n  error: {\n    marginTop: 10,\n    color: 'red',\n    textAlign: 'center'\n  },\n  signupContainer: {\n    flexDirection: 'row',\n    marginTop: 20\n  },\n  signupText: {\n    fontSize: 17\n  },\n  signupLink: {\n    color: 'blue',\n    marginLeft: 10,\n    fontSize: 17\n  }\n});\nexport default SignInScreen;","map":{"version":3,"names":["React","useState","StyleSheet","Text","View","Image","TouchableOpacity","Input","Button","Icon","getAuth","signInWithEmailAndPassword","jsx","_jsx","jsxs","_jsxs","auth","SignInScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","validationMessage","setValidationMessage","login","_login","apply","arguments","_asyncToGenerator","error","message","style","styles","container","children","content","source","require","logo","placeholder","containerStyle","inputContainer","value","onChangeText","text","leftIcon","name","size","secureTextEntry","title","buttonStyle","button","onPress","signupContainer","signupText","navigate","signupLink","create","flex","backgroundColor","alignItems","justifyContent","width","height","marginBottom","marginTop","borderRadius","paddingVertical","color","textAlign","flexDirection","fontSize","marginLeft"],"sources":["/Users/morofir/Desktop/Hezroni-sYard/screens/SignInScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, Image, TouchableOpacity } from 'react-native';\nimport { Input, Button } from 'react-native-elements';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\n\nconst auth = getAuth();\n\nconst SignInScreen = ({ navigation }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [validationMessage, setValidationMessage] = useState('');\n\n  async function login() {\n    if (email === '' || password === '') {\n      setValidationMessage('Required fields are missing');\n      return;\n    }\n\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n    } catch (error) {\n      setValidationMessage(error.message);\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.content}>\n        <Image source={require('../assets/logo.png')} style={styles.logo} />\n\n        <Input\n          placeholder=\"Email\"\n          containerStyle={styles.inputContainer}\n          value={email}\n          onChangeText={(text) => setEmail(text)}\n          leftIcon={<Icon name=\"envelope\" size={16} />}\n        />\n\n        <Input\n          placeholder=\"Password\"\n          containerStyle={styles.inputContainer}\n          value={password}\n          onChangeText={(text) => setPassword(text)}\n          secureTextEntry={true}\n          leftIcon={<Icon name=\"key\" size={16} />}\n        />\n\n        <Text style={styles.error}>{validationMessage}</Text>\n\n        <Button\n          title=\"Sign In\"\n          buttonStyle={styles.button}\n          onPress={login}\n        />\n\n        <View style={styles.signupContainer}>\n          <Text style={styles.signupText}>\n            Don't have an account yet?\n          </Text>\n          <TouchableOpacity onPress={() => navigation.navigate('Sign Up')}>\n            <Text style={styles.signupLink}>Sign up here</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  content: {\n    width: '80%',\n    alignItems: 'center',\n  },\n  logo: {\n    width: 150,\n    height: 150,\n    marginBottom: 20,\n  },\n  inputContainer: {\n    marginTop: 10,\n  },\n  button: {\n    marginTop: 20,\n    backgroundColor: '#2196F3',\n    borderRadius: 8,\n    paddingVertical: 14,\n  },\n  error: {\n    marginTop: 10,\n    color: 'red',\n    textAlign: 'center',\n  },\n  signupContainer: {\n    flexDirection: 'row',\n    marginTop: 20,\n  },\n  signupText: {\n    fontSize: 17,\n  },\n  signupLink: {\n    color: 'blue',\n    marginLeft: 10,\n    fontSize: 17,\n  },\n});\n\nexport default SignInScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}