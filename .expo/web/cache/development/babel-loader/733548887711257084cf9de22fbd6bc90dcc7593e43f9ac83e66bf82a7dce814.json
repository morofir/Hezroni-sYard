{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { push, ref, set, child } from 'firebase/database';\nimport { db, auth } from \"../config/firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddData = function AddData() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    title = _useState2[0],\n    setTitle = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    body = _useState4[0],\n    setBody = _useState4[1];\n  var user = auth.currentUser;\n  var handleSubmit = function handleSubmit() {\n    if (user) {\n      var dataRef = ref(db, \"data/\" + user.uid);\n      var newDataRef = push(dataRef);\n      var entryID = newDataRef.key;\n      var newData = {\n        entryID: entryID,\n        title: title,\n        body: body\n      };\n      set(child(dataRef, entryID), newData).then(function () {\n        console.log('Data added successfully!');\n        setTitle('');\n        setBody('');\n      }).catch(function (error) {\n        console.error('Error adding data:', error);\n      });\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Add Data\"\n    }), _jsx(TextInput, {\n      placeholder: \"Title\",\n      value: title,\n      onChangeText: function onChangeText(text) {\n        return setTitle(text);\n      },\n      style: styles.input\n    }), _jsx(TextInput, {\n      placeholder: \"Body\",\n      value: body,\n      onChangeText: function onChangeText(text) {\n        return setBody(text);\n      },\n      style: styles.input\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleSubmit,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Add\"\n      })\n    })]\n  });\n};\nexport default AddData;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f9f9f9',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    marginBottom: 40,\n    color: '#2196F3',\n    textShadowColor: '#000',\n    textShadowOffset: {\n      width: 1,\n      height: 1\n    },\n    textShadowRadius: 2\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    marginVertical: 10,\n    padding: 12,\n    fontSize: 20,\n    borderRadius: 8,\n    width: '80%'\n  },\n  button: {\n    backgroundColor: '#2196F3',\n    padding: 15,\n    borderRadius: 8,\n    marginTop: 20\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 20,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","Text","View","TextInput","TouchableOpacity","push","ref","set","child","db","auth","jsx","_jsx","jsxs","_jsxs","AddData","_useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","body","setBody","user","currentUser","handleSubmit","dataRef","uid","newDataRef","entryID","key","newData","then","console","log","catch","error","style","styles","container","children","placeholder","value","onChangeText","text","input","button","onPress","buttonText","create","flex","backgroundColor","alignItems","justifyContent","fontSize","fontWeight","marginBottom","color","textShadowColor","textShadowOffset","width","height","textShadowRadius","borderWidth","borderColor","marginVertical","padding","borderRadius","marginTop"],"sources":["/Users/morofir/Desktop/Hezroni-sYard/screens/MeScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native';\r\nimport { push, ref, set, child } from 'firebase/database';\r\nimport { db, auth } from '../config/firebase';\r\n\r\nconst AddData = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n\r\n  const user = auth.currentUser; // Get the current user from Firebase auth\r\n\r\n  const handleSubmit = () => {\r\n    if (user) {\r\n      const dataRef = ref(db, `data/${user.uid}`);\r\n      const newDataRef = push(dataRef);\r\n      const entryID = newDataRef.key;\r\n      \r\n      const newData = {\r\n        entryID,\r\n        title,\r\n        body,\r\n      };\r\n\r\n      set(child(dataRef, entryID), newData)\r\n        .then(() => {\r\n          console.log('Data added successfully!');\r\n          // Reset the input fields\r\n          setTitle('');\r\n          setBody('');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error adding data:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Add Data</Text>\r\n      <TextInput\r\n        placeholder=\"Title\"\r\n        value={title}\r\n        onChangeText={(text) => setTitle(text)}\r\n        style={styles.input}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Body\"\r\n        value={body}\r\n        onChangeText={(text) => setBody(text)}\r\n        style={styles.input}\r\n      />\r\n      <TouchableOpacity style={styles.button} onPress={handleSubmit}>\r\n        <Text style={styles.buttonText}>Add</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default AddData;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f9f9f9',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 36,\r\n    fontWeight: 'bold',\r\n    marginBottom: 40,\r\n    color: '#2196F3',\r\n    textShadowColor: '#000',\r\n    textShadowOffset: { width: 1, height: 1 },\r\n    textShadowRadius: 2,\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    marginVertical: 10,\r\n    padding: 12,\r\n    fontSize: 20,\r\n    borderRadius: 8,\r\n    width: '80%',\r\n  },\r\n  button: {\r\n    backgroundColor: '#2196F3',\r\n    padding: 15,\r\n    borderRadius: 8,\r\n    marginTop: 20,\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}