{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Input, Button } from 'react-native-elements';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { getAuth, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { collection, addDoc } from 'firebase/firestore';\nimport { firestore } from \"../config/firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar auth = getAuth();\nvar SignUpScreen = function SignUpScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    name = _useState6[0],\n    setName = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    confirmPassword = _useState8[0],\n    setConfirmPassword = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    validationMessage = _useState10[0],\n    setValidationMessage = _useState10[1];\n  var validateAndSet = function validateAndSet(value, setValue) {\n    setValue(value);\n  };\n  function checkPassword(firstPassword, secondPassword) {\n    if (firstPassword !== secondPassword) {\n      setValidationMessage('Passwords do not match');\n    } else {\n      setValidationMessage('');\n    }\n  }\n  function createAccount() {\n    return _createAccount.apply(this, arguments);\n  }\n  function _createAccount() {\n    _createAccount = _asyncToGenerator(function* () {\n      if (email === '' || password === '' || confirmPassword === '') {\n        setValidationMessage('Required fields are missing');\n        return;\n      }\n      if (password !== confirmPassword) {\n        setValidationMessage('Passwords do not match');\n        return;\n      }\n      try {\n        addDoc(collection(firestore, \"users\"), {\n          email: email,\n          name: name\n        }).then(function () {\n          console.log('data submitted');\n        }).catch(function (error) {\n          console.log(error);\n        });\n        ;\n        yield createUserWithEmailAndPassword(auth, email, password);\n        navigation.navigate('Sign In');\n      } catch (error) {\n        setValidationMessage(error.message);\n      }\n    });\n    return _createAccount.apply(this, arguments);\n  }\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.content,\n      children: [_jsx(Image, {\n        source: require(\"../assets/logo.png\"),\n        style: styles.logo\n      }), _jsx(Input, {\n        placeholder: \"Email\",\n        containerStyle: styles.inputContainer,\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        leftIcon: _jsx(Icon, {\n          name: \"envelope\",\n          size: 16\n        })\n      }), _jsx(Input, {\n        placeholder: \"Password\",\n        containerStyle: styles.inputContainer,\n        value: password,\n        onChangeText: function onChangeText(value) {\n          return validateAndSet(value, setPassword);\n        },\n        secureTextEntry: true,\n        leftIcon: _jsx(Icon, {\n          name: \"key\",\n          size: 16\n        })\n      }), _jsx(Input, {\n        placeholder: \"Confirm Password\",\n        containerStyle: styles.inputContainer,\n        value: confirmPassword,\n        onChangeText: function onChangeText(value) {\n          return validateAndSet(value, setConfirmPassword);\n        },\n        secureTextEntry: true,\n        leftIcon: _jsx(Icon, {\n          name: \"key\",\n          size: 16\n        }),\n        onBlur: function onBlur() {\n          return checkPassword(password, confirmPassword);\n        }\n      }), _jsx(Text, {\n        style: styles.error,\n        children: validationMessage\n      }), _jsx(Button, {\n        title: \"Sign Up\",\n        buttonStyle: styles.button,\n        onPress: createAccount\n      }), _jsxs(View, {\n        style: styles.loginContainer,\n        children: [_jsx(Text, {\n          style: styles.loginText,\n          children: \"Already have an account?\"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('Sign In');\n          },\n          children: _jsx(Text, {\n            style: styles.loginLink,\n            children: \"Login here\"\n          })\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  content: {\n    width: '80%',\n    alignItems: 'center'\n  },\n  logo: {\n    width: 150,\n    height: 150,\n    marginBottom: 20\n  },\n  inputContainer: {\n    marginTop: 10\n  },\n  button: {\n    marginTop: 20,\n    backgroundColor: '#2196F3',\n    borderRadius: 8,\n    paddingVertical: 14\n  },\n  error: {\n    marginTop: 10,\n    color: 'red',\n    textAlign: 'center'\n  },\n  loginContainer: {\n    flexDirection: 'row',\n    marginTop: 20\n  },\n  loginText: {\n    fontSize: 17\n  },\n  loginLink: {\n    color: 'blue',\n    marginLeft: 10,\n    fontSize: 17\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"names":["React","useState","StyleSheet","Text","View","Image","TouchableOpacity","Input","Button","Icon","getAuth","createUserWithEmailAndPassword","collection","addDoc","firestore","jsx","_jsx","jsxs","_jsxs","auth","SignUpScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","name","setName","_useState7","_useState8","confirmPassword","setConfirmPassword","_useState9","_useState10","validationMessage","setValidationMessage","validateAndSet","value","setValue","checkPassword","firstPassword","secondPassword","createAccount","_createAccount","apply","arguments","_asyncToGenerator","then","console","log","catch","error","navigate","message","style","styles","container","children","content","source","require","logo","placeholder","containerStyle","inputContainer","onChangeText","text","leftIcon","size","secureTextEntry","onBlur","title","buttonStyle","button","onPress","loginContainer","loginText","loginLink","create","flex","backgroundColor","alignItems","justifyContent","width","height","marginBottom","marginTop","borderRadius","paddingVertical","color","textAlign","flexDirection","fontSize","marginLeft"],"sources":["/Users/morofir/Desktop/Hezroni-sYard/screens/SignUpScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, Image, TouchableOpacity } from 'react-native';\nimport { Input, Button } from 'react-native-elements';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { getAuth, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { collection,addDoc } from 'firebase/firestore';\nimport { firestore } from '../config/firebase';\n\nconst auth = getAuth();\n\nconst SignUpScreen = ({ navigation }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [validationMessage, setValidationMessage] = useState('');\n\n  let validateAndSet = (value, setValue) => {\n    setValue(value);\n  };\n\n  function checkPassword(firstPassword, secondPassword) {\n    if (firstPassword !== secondPassword) {\n      setValidationMessage('Passwords do not match');\n    } else {\n      setValidationMessage('');\n    }\n  }\n\n  async function createAccount() {\n    if (email === '' || password === '' || confirmPassword === '') {\n      setValidationMessage('Required fields are missing');\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      setValidationMessage('Passwords do not match');\n      return;\n    }\n\n    try {\n      \n      addDoc(collection(firestore,\"users\"), {\n        email: email,\n        name:name,\n      }).then(() => {\n        console.log('data submitted');\n      }).catch((error)=> {\n        console.log(error);\n      });;\n      await createUserWithEmailAndPassword(auth, email, password);\n      navigation.navigate('Sign In');\n    } catch (error) {\n      setValidationMessage(error.message);\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.content}>\n        <Image\n          source={require('../assets/logo.png')}\n          style={styles.logo}\n        />\n\n        <Input\n          placeholder=\"Email\"\n          containerStyle={styles.inputContainer}\n          value={email}\n          onChangeText={(text) => setEmail(text)}\n          leftIcon={<Icon name=\"envelope\" size={16} />}\n        />\n\n        <Input\n          placeholder=\"Password\"\n          containerStyle={styles.inputContainer}\n          value={password}\n          onChangeText={(value) => validateAndSet(value, setPassword)}\n          secureTextEntry\n          leftIcon={<Icon name=\"key\" size={16} />}\n        />\n\n        <Input\n          placeholder=\"Confirm Password\"\n          containerStyle={styles.inputContainer}\n          value={confirmPassword}\n          onChangeText={(value) => validateAndSet(value, setConfirmPassword)}\n          secureTextEntry\n          leftIcon={<Icon name=\"key\" size={16} />}\n          onBlur={() => checkPassword(password, confirmPassword)}\n        />\n\n        <Text style={styles.error}>{validationMessage}</Text>\n\n        <Button\n          title=\"Sign Up\"\n          buttonStyle={styles.button}\n          onPress={createAccount}\n        />\n\n        <View style={styles.loginContainer}>\n          <Text style={styles.loginText}>Already have an account?</Text>\n          <TouchableOpacity onPress={() => navigation.navigate('Sign In')}>\n            <Text style={styles.loginLink}>Login here</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  content: {\n    width: '80%',\n    alignItems: 'center',\n  },\n  logo: {\n    width: 150,\n    height: 150,\n    marginBottom: 20,\n  },\n  inputContainer: {\n    marginTop: 10,\n  },\n  button: {\n    marginTop: 20,\n    backgroundColor: '#2196F3',\n    borderRadius: 8,\n    paddingVertical: 14,\n  },\n  error: {\n    marginTop: 10,\n    color: 'red',\n    textAlign: 'center',\n  },\n  loginContainer: {\n    flexDirection: 'row',\n    marginTop: 20,\n  },\n  loginText: {\n    fontSize: 17,\n  },\n  loginLink: {\n    color: 'blue',\n    marginLeft: 10,\n    fontSize: 17,\n  },\n});\n\nexport default SignUpScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}